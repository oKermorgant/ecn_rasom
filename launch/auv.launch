<?xml version="1.0"?>
<launch>
    
    <arg name="uwsim" default="true"/>
    <arg name="robot" default="brov2"/>
    <param name="use_sim_time" value="true"/>
    

    <!-- Launch Gazebo with underwater world -->
   <include file="$(find gazebo_ros)/launch/empty_world.launch">
       <arg name="gui" value="false" if="$(arg uwsim)"/>
        <arg name="paused" value="true"/>
        <arg name="world_name" value="$(find freefloating_gazebo)/world/underwater.world"/>
    </include>
    
    <!-- add 100 x 100 m turquoise water -->
    <node name="surface" pkg="freefloating_gazebo" type="surface.py"
          args="-x 100 -y 100 -g 0.2 -b 1 -a 0.2"/>
    
    <!-- rviz with config -->
   <node name="rviz" pkg="rviz" type="rviz"  args="-d $(find ecn_rasom)/launch/config.rviz" /> 
   
     <node name="uwsim" pkg="uwsim" type="uwsim" 
        args="--dataPath $(find ecn_rasom) --configfile scenes/$(arg robot).xml" respawn="true"
           if="$(arg uwsim)" />
  
    <!-- include gazebo spawner (generated while parsing uwsim launcher) -->
    <group ns="auv">
        <param name="robot_description" command="$(find xacro)/xacro $(find ecn_rasom)/urdf/$(arg robot).xacro"/>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
        <node name="spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model auv -param robot_description -x 0 -y 0 -z 1 -R 0 -P 0 -Y 0"/>

        <!-- Load controller configurations (vehicle and arm) from YAML file to parameter server -->
        <rosparam file="$(find ecn_rasom)/config/$(arg robot).yaml" command="load"/>
  
        <!-- Launch low-level PID control for body and arm -->
       <node name="pid_control" pkg="freefloating_gazebo" type="pid_body" output="screen" respawn="true">
            <param name="body_control" value="position"/>
        </node>
        
        <!-- change Gazebo odom (ground truth) to tf for RViz -->
        <node name="odom2tf" pkg="ecn_rasom" type="odom2tf" output="screen" respawn="true"/>
    </group>
    
    <!-- spawn terrain -->
<!--     <param name="terrain_description" command="$(find xacro)/xacro $(find ecn_rasom)/terrain/shipwreck/terrain.sdf"/> -->
<!--     <node name="terrain_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-sdf -model terrain -param terrain_description -x 0 -y 0 -z 0 -R 0 -P 0 -Y 0"/> -->
   
</launch>
