<?xml version="1.0"?>
<launch>
    <arg name="robot" default="brov2"/>
    
    <!-- Launch Gazebo with underwater world, no gui -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="false"/>
        <arg name="paused" value="true"/>
        <arg name="world_name" value="$(find freefloating_gazebo)/world/underwater.world"/>
        <arg name="extra_gazebo_args" value="/auv/state:=/auv/ground_truth"/>
    </include>
    
    <!-- rviz with config -->
    <include file="$(find freefloating_gazebo)/launch/rviz.launch">
        <arg name="ns" value="auv"/>
        <arg name="config" value="$(find ecn_rasom)/launch/config_ekf.rviz" />
    </include>
<!--     <node name="rviz" pkg="rviz" type="rviz"  args="-d $(find ecn_rasom)/launch/config_ekf.rviz" /> -->
    
    <!-- include gazebo spawner (generated while parsing uwsim launcher) -->
    <group ns="auv">
        <param name="robot_description" command="$(find xacro)/xacro $(find ecn_rasom)/urdf/$(arg robot).xacro"/>
         <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
        <node name="spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model auv -param robot_description -x 0 -y 0 -z 1 -R 0 -P 0 -Y 0"/>

        <!-- Load controller configurations (vehicle and arm) from YAML file to parameter server -->
        <rosparam file="$(find ecn_rasom)/config/$(arg robot).yaml" command="load"/>
  
        <!-- Launch low-level PID control for body and arm -->
        <node name="pid_control" pkg="freefloating_gazebo" type="pid_body" output="screen"/>
        
        <!-- Depth / USBL simulation with associated covariances -->
        <node name="sensors" pkg="ecn_rasom" type="sensors" output="screen" respawn="true">
            <param name="usbl" value="1"/>
            <param name="depth" value=".2"/>
        </node>  
        
        </group>
    
    <!-- spawn terrain -->
    <param name="terrain_description" command="$(find xacro)/xacro $(find ecn_rasom)/terrain/shipwreck/terrain.sdf"/>
    <node name="terrain_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-sdf -model terrain -param terrain_description -x 0 -y 0 -z 0 -R 0 -P 0 -Y 0"/>
    

</launch>
